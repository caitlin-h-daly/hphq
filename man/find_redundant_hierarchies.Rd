% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/find_redundant_hierarchies.R
\name{find_redundant_hierarchies}
\alias{find_redundant_hierarchies}
\title{Identify and optionally trim redundant hierarchies}
\usage{
find_redundant_hierarchies(algo_1, algo_2, type = 1:8, trim_redundant = FALSE)
}
\arguments{
\item{algo_1}{a list of data frames outputted from `get_arrangements()`
containing the credible hierarchies for ranked permutations, permutations,
ranked combinations, and combinations.}

\item{algo_2}{a data frame outputted from `get_phier()` containing credible
partial hierarchies.}

\item{type}{a numeric vector indicating what types of hierarchy redundancies
should be trimmed. See details for more information. Default is 1:8.}

\item{trim_redundant}{a logical value indicating whether the redundant
hierarchies should be trimmed from the output (TRUE) or not (FALSE, the
default).}
}
\value{
A list of the credible ranked permutations, permutations, ranked
combinations, combinations, and partial hierarchies along with their
redundancy status.
}
\description{
`find_redundant_hierarchies` compares the outputs from `get_arrangements()`
and `get_phier()` to identify redundant credible hierarchies.
}
\details{
Hierarchy redundancy types can be identified with numbers through 1 through 8
as follows:
1) Within partial hierarchies (e.g., A > B is redundant because of A > B > C).
2) Between partial hierarchies and permutations (e.g., A > B is redundant
  because of (A, B)).
3) Between combinations and ranked combinations (e.g., ${A, B}$ is redundant
  because of ${A, B}_1^2$).
4) Between combinations and ranked combinations (e.g., ${A, B}$ is redundant
  because of $(A, B)$).
5) Between ranked combinations and ranked permutations (e.g., ${A, B}_1^2$ is
  redundant because of $(A, B)_1^2$).
6) Within permutations (e.g., (A, B) is redundant because of (A, B, C)).
7) Between permutations and ranked permutations(e.g., $(A, B)$ is redundant
  because of $(A, B)_1^2$).
8) Within ranked permutations (e.g., $(A, B)_1^2$ is redundant because of
  $(A, B, C)_1^3$).

We recommend these hierarchy redundancies are identified in increasing order
(1 through 8). Otherwise, a warning will be outputted.
}
\examples{
inputs <- prep_data(effects_matrix = dat_Thijs2008[, -1], reference = "Placebo", largerbetter = FALSE)
algo1 <- get_arrangements(hierarchy_matrix = inputs$hierarchy_matrix, threshold = 0.9)
algo2 <- get_cred_phier(effects_matrix = inputs$effects_matrix, mid = 0, threshold = 0.9, larger_better = FALSE)
find_redundant_hierarchies(algo1, algo2)
}
